{"ast":null,"code":"import _classCallCheck from \"/Users/ben/Desktop/bennyben/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ben/Desktop/bennyben/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ben/Desktop/bennyben/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ben/Desktop/bennyben/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ben/Desktop/bennyben/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ben/Desktop/bennyben/fullstack_app/client/src/Users.js\";\nimport React, { Component } from \"react\"; // bring in Firestore Component with DB connectivity\n\nimport firestore from \"./Firestore\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n    _this.state = {\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      db = firebase.firestore();\n      db.collection(\"users\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          console.log(\"\".concat(doc.id, \" => \").concat(doc.data()));\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"hello\");\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/ben/Desktop/bennyben/fullstack_app/client/src/Users.js"],"names":["React","Component","firestore","Users","props","state","users","db","firebase","collection","get","then","querySnapshot","forEach","doc","console","log","id","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAGMC,K;;;;;AACL,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AADK,KAAb;AAHkB;AAOlB;;;;wCAEmB;AACnBC,MAAAA,EAAE,GAAGC,QAAQ,CAACN,SAAT,EAAL;AACAK,MAAAA,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GAA6BC,IAA7B,CAAkC,UAACC,aAAD,EAAmB;AACnDA,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAS;AAC3BC,UAAAA,OAAO,CAACC,GAAR,WAAeF,GAAG,CAACG,EAAnB,iBAA4BH,GAAG,CAACI,IAAJ,EAA5B;AACH,SAFD;AAGD,OAJD;AAKA;;;6BAES;AACP,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAGD;;;;EAvBiBjB,S;;AA0BpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\n// bring in Firestore Component with DB connectivity\nimport firestore from \"./Firestore\";\n\n\nclass Users extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tusers: []\n\t\t};\n\n\t}\n\n\tcomponentDidMount() {\n\t\tdb = firebase.firestore();\n\t\tdb.collection(\"users\").get().then((querySnapshot) => {\n\t\t  querySnapshot.forEach((doc) => {\n\t\t      console.log(`${doc.id} => ${doc.data()}`);\n\t\t  });\n\t\t});\n\t}\n\n  render() {\n    return (\n    \t<div>hello</div>\n    );\n  }\n}\n\nexport default Users\t;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}